name: Python package

on: [push]

jobs:
  buildmain:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run main branch
        run: |
          python3 parse.py main
          cat generated_tests.py > main_tests.py
          python3 generated_tests.py > mainoutput.log
      - name: Upload output file
        uses: actions/upload-artifact@v3
        with:
          name: main-output
          path: mainoutput.log
      - name: Upload main branch's tests
        uses: actions/upload-artifact@v3
        with:
          name: main-tests
          path: main_tests.py

  buildbranch:
    needs: buildmain
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Download main branch test artifact
        uses: actions/download-artifact@v3
        with:
          name: main-tests
      - name: Run individual branch
        run: |
          python3 main_tests.py > branchoutput.log
      - name: Upload output file
        uses: actions/upload-artifact@v3
        with:
          name: branch-output
          path: branchoutput.log

  comparediffs:
    needs: buildbranch
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Download main branch artifact
        uses: actions/download-artifact@v3
        with:
          name: main-output
      - name: Download individual branch artifact
        uses: actions/download-artifact@v3
        with:
          name: branch-output
      - name: Compare diffs
        run: |
          LINES=`diff mainoutput.log branchoutput.log | wc -l`
          if [ "$LINES" -gt 0 ]; then
            echo "Semantic merge conflict!"
          else
            echo "No semantic merge conflict"
          fi
